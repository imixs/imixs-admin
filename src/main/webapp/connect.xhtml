<ui:composition template="/WEB-INF/templates/layout.xhtml"
	xmlns:faces="jakarta.faces" xmlns:f="jakarta.faces.core"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:h="jakarta.faces.html" xmlns:ui="jakarta.faces.facelets">

	<ui:define name="content">


		<f:view>

			<div class="header">
				<h2>
					<span class="typcn typcn-link-outline"></span> Endpoint
				</h2>
			</div>
			<h:form id="connect_form_id">

				<div class="card">

					<p class="help">
						<span class="typcn typcn-lightbulb"></span> Connect to an
						Imixs-Workflow API endpoint.
					</p>

					<div class="imixs-form-section">
						<dl style="grid-column-start: span 12;">
							<dt>URL:</dt>
							<dd>
								<h:inputText value="#{connectionController.endpoint}"
									id="endpoint_input" pt:autocomplete="off" 
									disabled="#{connectionController.connected}" required="true" />
									<h:inputText id="endpoint_suggestions" style="display:none;" />
							</dd>
						</dl>
					</div>

					<div class="imixs-form-section">
						<dl style="grid-column-start: span 4;">
							<dt>Authentication Method:</dt>
							<dd>
								<h:selectOneMenu id="selectedItem"
									value="#{connectionController.type}"
									disabled="#{connectionController.connected}">
									<f:selectItem itemValue="FORM" itemLabel="Form Based" />
									<f:selectItem itemValue="BASIC" itemLabel="Basic" />
									<f:selectItem itemValue="COOKIE" itemLabel="Cookie" />
									<f:selectItem itemValue="JWT" itemLabel="JWT" />
									<f:ajax render="key_token_input" />
								</h:selectOneMenu>
							</dd>
						</dl>

						<h:panelGroup id="key_token_input"
							style="grid-column-start: span 8;">
							<!-- Userid / Cookie -->
							<h:panelGroup id="key_input"
								rendered="#{(connectionController.type eq 'BASIC') or (connectionController.type eq 'FORM') or (connectionController.type eq 'COOKIE')}">
								<dl>
									<dt>

										<h:outputText value="User-ID:"
											rendered="#{(connectionController.type eq 'BASIC') or (connectionController.type eq 'FORM')}" />
										<h:outputText value="Name:"
											rendered="#{connectionController.type eq 'COOKIE'}" />

									</dt>

									<dd>
										<h:inputText value="#{connectionController.key}"
											id="imixsadmin_userid_input" name="imixsadmin_userid_input"
											disabled="#{connectionController.connected}" />

									</dd>
								</dl>
							</h:panelGroup>

							<!-- Password / Token -->
							<h:panelGroup id="token_input">

								<dl>
									<dt>
										<h:outputText value="Password:"
											rendered="#{(connectionController.type eq 'BASIC') or (connectionController.type eq 'FORM')}" />
										<h:outputText value="Value:"
											rendered="#{connectionController.type eq 'COOKIE'}" />
										<h:outputText value="Token"
											rendered="#{connectionController.type eq 'JWT'}" />
									</dt>
									<dd>
										<h:inputSecret id="imixadmin_connect_secret" name="imixadmin_connect_secret" value="#{connectionController.token}"
											disabled="#{connectionController.connected}" />
									</dd>
								</dl>
							</h:panelGroup>
						</h:panelGroup>

					</div>

					<div class="card" style="min-height: 80px;display: flex; align-items: center;gap: 20px;">
						<span>
							<h:commandButton
								value="Connect"
								actionListener="#{connectionController.connect()}"
								rendered="#{!connectionController.connected}" /> 
							<h:commandButton
								value="Disconnect" rendered="#{connectionController.connected}"
								actionListener="#{connectionController.disconnect()}"
								action="connect" />
								<!-- Error Message -->
						</span>
						<span><h4 style="color: rgb(221, 19, 19); font-weight: bold;margin-top:5px;">#{connectionController.errorMessage}</h4></span>
						
					</div>
					<!-- Log -->
					<ui:include src="log.xhtml" />
				</div>
			</h:form>
		</f:view>


		<script type="text/javascript">
		/*<![CDATA[*/

			let connected='#{connectionController.connected}';
            // load stored endpoints as suggestion
            document.addEventListener("DOMContentLoaded", function() {
				if (connected==='true') {
					const connectedEndpoint=document.getElementById('connect_form_id:endpoint_input').value;
					// alert('save endpoint: '+connectedEndpoint);
					saveEndpoint(connectedEndpoint);
				} else {
					// alert('load endpoints ');
					let endpoints = loadEndpoints();
					let inputField = document.getElementById('connect_form_id:endpoint_input');
					let suggestionField = document.getElementById('connect_form_id:endpoint_suggestions');
					if (endpoints.length > 0) {
						inputField.setAttribute('list', 'endpoint_suggestions');
						let datalist = document.createElement('datalist');
						datalist.id = 'endpoint_suggestions';
						endpoints.forEach(function(endpoint) {
							let option = document.createElement('option');
							option.value = endpoint;
							datalist.appendChild(option);
						});
						document.body.appendChild(datalist);
					}
				}
            });

			function saveEndpoint(endpoint) {
				let endpoints = JSON.parse(localStorage.getItem('endpoints')) || [];
				// remove endpoint if exits
				endpoints = endpoints.filter(e => e !== endpoint);
				// store new endpoint
				endpoints.unshift(endpoint);
				if (endpoints.length > 10) {
					endpoints = endpoints.slice(0, 10);
				}
				localStorage.setItem('endpoints', JSON.stringify(endpoints));
			}

			function loadEndpoints() {
				return JSON.parse(localStorage.getItem('endpoints')) || [];
			}			
		/*]]>*/
		</script>	
	</ui:define>
</ui:composition>
